# https://ninja-build.org/manual.html
# https://clang.llvm.org/get_started.html
# https://clang.llvm.org/docs/ClangCommandLineReference.html
# https://clang.llvm.org/docs/UsersManual.html
# https://npp-user-manual.org/docs/session/

# TODO, ToLearn
#  4. See for information on what execlty is running and when...
#  compilation, linking, building process exaclly i want to know that well...
#  5. Make it all easy to update somehow. clang, ninja, powershell, notepad++
#  7. Try getting a notepad++ highlighter for .ninja files.
#  8. Make a build and run chain.
#  9. Make it able to have libs connected to the build
#  -. Run troghol and winapi projects here.

# dependencing
# https://ninja-build.org/manual.html#ref_dependencies

# GRAVEYARD
# Older version in which args are takes as $in and the command itself as $out.
# rule cc
#   command = clang++ $compileFlags $in -o $out
# build Sample.exe : cc sample/src/sample.cpp sample/src/main.cpp 

include .ninja\properties.ninja
include .ninja\secret.ninja

# Ninja variables

builddir = $buildDir

# Libraries

libName = lib
libIncludePath = $libName\inc

# Compilation Arguments :

srcList = $libName\src\lib_sample.cpp $projectName\src\sample.cpp $projectName\src\main.cpp
globalIncludePath = $projectName\inc
errorLimit = 10
cppStandard = -std=c++20

# Windows Terminal Arguments :

tabColor = "#000"

# RULES

rule compile
  command = clang++ -Wall $cppStandard -ferror-limit=$errorLimit -I $globalIncludePath -I $libIncludePath $srcList -o $buildDir$projectTitle.exe

rule clear
  command = rm $buildDir$projectTitle.exe
  
rule setup
  command = cmd /c wt -w 1 --title $projectTitle --tabColor $tabColor $projectPath\$buildDir$projectTitle.exe --setup %cd%
  
rule refresh
  command = cmd /c $toolsPath --refresh-npp tools.npp $projectPath\$projectName $projectPath\$libName
# BUILDS
  
build bld : compile
build cls : clear
build stp : setup
build rsh : refresh
